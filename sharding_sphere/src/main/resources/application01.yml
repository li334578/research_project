server:
  port: 8081
spring:
  main:
    allow-bean-definition-overriding: true # 解决一个实体类对应了两张同样结构的表的问题
  shardingsphere:
    datasource:
      names: m1
      m1:
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.cj.jdbc.Driver
        username: root
        password: root
        url: jdbc:mysql://localhost:3306/course_db?serverTimezone=GMT%2B8
    props:
      sql:
        show: true
    sharding:
      tables:
        course:
          # 指定course表的分布情况，配置在哪个数据库里面，表的名称都是什么
          actual-data-nodes: m1.course_$->{1..2}
          key-generator: # 指定主键cid的生成策略
            column: cid
            type: SNOWFLAKE
          table-strategy: # 指定分片策略
            inline:
              sharding-column: cid
              algorithm-expression: course_$->{cid % 2 + 1}
#  datasource:
#    driverClassName: com.mysql.cj.jdbc.Driver
#    url: jdbc:mysql://localhost:3306/course_db?serverTimezone=Asia/Shanghai&useUnicode=true&characterEncoding=UTF-8
#    username: root
#    password: root